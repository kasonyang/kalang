
class {

    private async Integer getValue() {
        return 3;
    }

    private async Integer awaitValue() {
        return await getValue();
    }

    private async Integer awaitSum() {
        val v1 = awaitValue();
        val v2 = awaitValue();
        return (await v1) + (await v2);
    }

    private async Integer throwError() {
        throw new Exception("exception in async method");
    }

    private async Integer catchError() {
        try {
            await this.throwError();
            return 1;
        } catch (Exception ex) {
            return 6;
        }
    }


    boolean test() {
        return AsyncThread.execute(() -> awaitSum()).equals(6);
    }

    boolean testEx() {
        try {
            AsyncThread.execute(() -> throwError());
            return false;
        } catch (Throwable ex) {
            return ex.getMessage() == "exception in async method";
        }
    }

    boolean testCatch() {
        return AsyncThread.execute(() -> catchError()).equals(6);
    }

}

